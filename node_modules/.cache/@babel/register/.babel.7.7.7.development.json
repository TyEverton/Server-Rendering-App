{
  "{\"sourceRoot\":\"C:\\\\Users\\\\14353\\\\DevMountain\\\\week11\\\\server-rendering-app\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\14353\\\\DevMountain\\\\week11\\\\server-rendering-app\",\"filename\":\"C:\\\\Users\\\\14353\\\\DevMountain\\\\week11\\\\server-rendering-app\\\\server\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\14353\\\\DevMountain\\\\week11\\\\server-rendering-app\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\14353\\DevMountain\\week11\\server-rendering-app\\server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\14353\\DevMountain\\week11\\server-rendering-app",
      "filename": "C:\\Users\\14353\\DevMountain\\week11\\server-rendering-app\\server\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\14353\\DevMountain\\week11\\server-rendering-app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\14353\\DevMountain\\week11\\server-rendering-app\\server\\index.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\14353\\DevMountain\\week11\\server-rendering-app\\server\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\14353\\DevMountain\\week11\\server-rendering-app\\server\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _fs = require(\"fs\");\n\nvar _server = require(\"react-dom/server\");\n\nvar _App = require(\"../client/App\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar data = {\n  questions: [{\n    questionId: \"Q1\",\n    content: \"Which back end solution should we use for our application?\"\n  }, {\n    questionId: \"Q2\",\n    content: \"What percentage of developer time should be devoted to end-to-end testing?\"\n  }],\n  answers: [{\n    answerId: \"A1\",\n    questionId: 1,\n    upvotes: 2,\n    content: \"Apache\"\n  }, {\n    answerId: \"A2\",\n    questionId: \"Q1\",\n    upvotes: 0,\n    content: \"Java\"\n  }, {\n    answerId: \"A3\",\n    questionId: \"Q1\",\n    upvotes: 4,\n    content: \"Node.js\"\n  }, {\n    answerId: \"A4\",\n    questionId: \"Q2\",\n    upvotes: 2,\n    content: \"25%\"\n  }, {\n    answerId: \"A5\",\n    questionId: \"Q2\",\n    upvotes: 1,\n    content: \"50%\"\n  }, {\n    answerId: \"A6\",\n    questionId: \"Q2\",\n    upvotes: 1,\n    content: \"75%\"\n  }]\n};\nvar app = new _express[\"default\"]();\napp.use(_express[\"default\"][\"static\"](\"dist\"));\napp.get(\"/\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_req, res) {\n    var index, render;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            index = (0, _fs.readFileSync)(\"public/index.html\", \"utf8\");\n            render = (0, _server.renderToString)( /*#__PURE__*/_react[\"default\"].createElement(_App.App, {\n              questions: data.questions,\n              answers: data.answers\n            }));\n            res.send(index.replace(\"{{rendered}}\", rendered)); // // res.send(\n            // //   `<h1>REACT IS SUPER HAWT</h1>`\n            // )\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.listen(7777);\nconsole.log(\"Server is running!\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRhdGEiLCJxdWVzdGlvbnMiLCJxdWVzdGlvbklkIiwiY29udGVudCIsImFuc3dlcnMiLCJhbnN3ZXJJZCIsInVwdm90ZXMiLCJhcHAiLCJleHByZXNzIiwidXNlIiwiZ2V0IiwiX3JlcSIsInJlcyIsImluZGV4IiwicmVuZGVyIiwic2VuZCIsInJlcGxhY2UiLCJyZW5kZXJlZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsSUFBSSxHQUFHO0FBQ1hDLEVBQUFBLFNBQVMsRUFBQyxDQUFDO0FBRVRDLElBQUFBLFVBQVUsRUFBQyxJQUZGO0FBR1RDLElBQUFBLE9BQU8sRUFBQztBQUhDLEdBQUQsRUFLVjtBQUVFRCxJQUFBQSxVQUFVLEVBQUMsSUFGYjtBQUdFQyxJQUFBQSxPQUFPLEVBQUM7QUFIVixHQUxVLENBREM7QUFZYkMsRUFBQUEsT0FBTyxFQUFDLENBQUM7QUFFTEMsSUFBQUEsUUFBUSxFQUFDLElBRko7QUFHTEgsSUFBQUEsVUFBVSxFQUFDLENBSE47QUFJTEksSUFBQUEsT0FBTyxFQUFDLENBSkg7QUFLTEgsSUFBQUEsT0FBTyxFQUFFO0FBTEosR0FBRCxFQU9OO0FBRUVFLElBQUFBLFFBQVEsRUFBQyxJQUZYO0FBR0VILElBQUFBLFVBQVUsRUFBQyxJQUhiO0FBSUVJLElBQUFBLE9BQU8sRUFBQyxDQUpWO0FBS0VILElBQUFBLE9BQU8sRUFBQztBQUxWLEdBUE0sRUFjTjtBQUVFRSxJQUFBQSxRQUFRLEVBQUMsSUFGWDtBQUdFSCxJQUFBQSxVQUFVLEVBQUMsSUFIYjtBQUlFSSxJQUFBQSxPQUFPLEVBQUMsQ0FKVjtBQUtFSCxJQUFBQSxPQUFPLEVBQUM7QUFMVixHQWRNLEVBcUJOO0FBRUVFLElBQUFBLFFBQVEsRUFBQyxJQUZYO0FBR0VILElBQUFBLFVBQVUsRUFBQyxJQUhiO0FBSUVJLElBQUFBLE9BQU8sRUFBQyxDQUpWO0FBS0VILElBQUFBLE9BQU8sRUFBQztBQUxWLEdBckJNLEVBNEJOO0FBRUVFLElBQUFBLFFBQVEsRUFBQyxJQUZYO0FBR0VILElBQUFBLFVBQVUsRUFBQyxJQUhiO0FBSUVJLElBQUFBLE9BQU8sRUFBQyxDQUpWO0FBS0VILElBQUFBLE9BQU8sRUFBQztBQUxWLEdBNUJNLEVBbUNOO0FBRUVFLElBQUFBLFFBQVEsRUFBQyxJQUZYO0FBR0VILElBQUFBLFVBQVUsRUFBQyxJQUhiO0FBSUVJLElBQUFBLE9BQU8sRUFBQyxDQUpWO0FBS0VILElBQUFBLE9BQU8sRUFBQztBQUxWLEdBbkNNO0FBWkssQ0FBYjtBQXlEQSxJQUFNSSxHQUFHLEdBQUcsSUFBSUMsbUJBQUosRUFBWjtBQUVBRCxHQUFHLENBQUNFLEdBQUosQ0FBUUQsOEJBQWUsTUFBZixDQUFSO0FBRUFELEdBQUcsQ0FBQ0csR0FBSixDQUFRLEdBQVI7QUFBQSxxRUFBYSxpQkFBT0MsSUFBUCxFQUFhQyxHQUFiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVMQyxZQUFBQSxLQUZLLEdBRUcsa0RBRkg7QUFHTEMsWUFBQUEsTUFISyxHQUdJLDBDQUFlLGdDQUFDLFFBQUQ7QUFBSyxjQUFBLFNBQVMsRUFBRWQsSUFBSSxDQUFDQyxTQUFyQjtBQUFnQyxjQUFBLE9BQU8sRUFBRUQsSUFBSSxDQUFDSTtBQUE5QyxjQUFmLENBSEo7QUFJWFEsWUFBQUEsR0FBRyxDQUFDRyxJQUFKLENBQVNGLEtBQUssQ0FBQ0csT0FBTixDQUFjLGNBQWQsRUFBOEJDLFFBQTlCLENBQVQsRUFKVyxDQU1YO0FBQ0E7QUFDQTs7QUFSVztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFiOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBWUFWLEdBQUcsQ0FBQ1csTUFBSixDQUFXLElBQVg7QUFDQUMsT0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQVoiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFwxNDM1M1xcRGV2TW91bnRhaW5cXHdlZWsxMVxcc2VydmVyLXJlbmRlcmluZy1hcHBcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXHJcbmltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCJcclxuXHJcbmltcG9ydCB7cmVhZEZpbGVTeW5jfSBmcm9tIFwiZnNcIlxyXG5pbXBvcnQge3JlbmRlclRvU3RyaW5nfSBmcm9tIFwicmVhY3QtZG9tL3NlcnZlclwiXHJcbmltcG9ydCB7QXBwfSBmcm9tIFwiLi4vY2xpZW50L0FwcFwiXHJcblxyXG5jb25zdCBkYXRhID0ge1xyXG4gIHF1ZXN0aW9uczpbe1xyXG5cclxuICAgIHF1ZXN0aW9uSWQ6XCJRMVwiLFxyXG4gICAgY29udGVudDpcIldoaWNoIGJhY2sgZW5kIHNvbHV0aW9uIHNob3VsZCB3ZSB1c2UgZm9yIG91ciBhcHBsaWNhdGlvbj9cIlxyXG5cclxufSx7XHJcblxyXG4gICAgcXVlc3Rpb25JZDpcIlEyXCIsXHJcbiAgICBjb250ZW50OlwiV2hhdCBwZXJjZW50YWdlIG9mIGRldmVsb3BlciB0aW1lIHNob3VsZCBiZSBkZXZvdGVkIHRvIGVuZC10by1lbmQgdGVzdGluZz9cIlxyXG5cclxufV0sXHJcbmFuc3dlcnM6W3tcclxuXHJcbiAgICBhbnN3ZXJJZDpcIkExXCIsXHJcbiAgICBxdWVzdGlvbklkOjEsXHJcbiAgICB1cHZvdGVzOjIsXHJcbiAgICBjb250ZW50OiBcIkFwYWNoZVwiXHJcblxyXG59LHtcclxuXHJcbiAgICBhbnN3ZXJJZDpcIkEyXCIsXHJcbiAgICBxdWVzdGlvbklkOlwiUTFcIixcclxuICAgIHVwdm90ZXM6MCxcclxuICAgIGNvbnRlbnQ6XCJKYXZhXCJcclxuXHJcbn0se1xyXG5cclxuICAgIGFuc3dlcklkOlwiQTNcIixcclxuICAgIHF1ZXN0aW9uSWQ6XCJRMVwiLFxyXG4gICAgdXB2b3Rlczo0LFxyXG4gICAgY29udGVudDpcIk5vZGUuanNcIlxyXG5cclxufSx7XHJcblxyXG4gICAgYW5zd2VySWQ6XCJBNFwiLFxyXG4gICAgcXVlc3Rpb25JZDpcIlEyXCIsXHJcbiAgICB1cHZvdGVzOjIsXHJcbiAgICBjb250ZW50OlwiMjUlXCJcclxuXHJcbn0se1xyXG5cclxuICAgIGFuc3dlcklkOlwiQTVcIixcclxuICAgIHF1ZXN0aW9uSWQ6XCJRMlwiLFxyXG4gICAgdXB2b3RlczoxLFxyXG4gICAgY29udGVudDpcIjUwJVwiXHJcblxyXG59LHtcclxuXHJcbiAgICBhbnN3ZXJJZDpcIkE2XCIsXHJcbiAgICBxdWVzdGlvbklkOlwiUTJcIixcclxuICAgIHVwdm90ZXM6MSxcclxuICAgIGNvbnRlbnQ6XCI3NSVcIlxyXG5cclxufV1cclxufVxyXG5cclxuY29uc3QgYXBwID0gbmV3IGV4cHJlc3MoKVxyXG5cclxuYXBwLnVzZShleHByZXNzLnN0YXRpYyhcImRpc3RcIikpXHJcblxyXG5hcHAuZ2V0KFwiL1wiLCBhc3luYyAoX3JlcSwgcmVzKSA9PiB7XHJcblxyXG4gIGNvbnN0IGluZGV4ID0gcmVhZEZpbGVTeW5jKGBwdWJsaWMvaW5kZXguaHRtbGAsIGB1dGY4YClcclxuICBjb25zdCByZW5kZXIgPSByZW5kZXJUb1N0cmluZyg8QXBwIHF1ZXN0aW9ucz17ZGF0YS5xdWVzdGlvbnN9IGFuc3dlcnM9e2RhdGEuYW5zd2Vyc30vPilcclxuICByZXMuc2VuZChpbmRleC5yZXBsYWNlKFwie3tyZW5kZXJlZH19XCIsIHJlbmRlcmVkKSlcclxuXHJcbiAgLy8gLy8gcmVzLnNlbmQoXHJcbiAgLy8gLy8gICBgPGgxPlJFQUNUIElTIFNVUEVSIEhBV1Q8L2gxPmBcclxuICAvLyApXHJcblxyXG59KVxyXG5cclxuYXBwLmxpc3Rlbig3Nzc3KVxyXG5jb25zb2xlLmxvZyhcIlNlcnZlciBpcyBydW5uaW5nIVwiKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "data",
        "questions",
        "questionId",
        "content",
        "answers",
        "answerId",
        "upvotes",
        "app",
        "express",
        "use",
        "get",
        "_req",
        "res",
        "index",
        "render",
        "send",
        "replace",
        "rendered",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAC,CAAC;AAETC,IAAAA,UAAU,EAAC,IAFF;AAGTC,IAAAA,OAAO,EAAC;AAHC,GAAD,EAKV;AAEED,IAAAA,UAAU,EAAC,IAFb;AAGEC,IAAAA,OAAO,EAAC;AAHV,GALU,CADC;AAYbC,EAAAA,OAAO,EAAC,CAAC;AAELC,IAAAA,QAAQ,EAAC,IAFJ;AAGLH,IAAAA,UAAU,EAAC,CAHN;AAILI,IAAAA,OAAO,EAAC,CAJH;AAKLH,IAAAA,OAAO,EAAE;AALJ,GAAD,EAON;AAEEE,IAAAA,QAAQ,EAAC,IAFX;AAGEH,IAAAA,UAAU,EAAC,IAHb;AAIEI,IAAAA,OAAO,EAAC,CAJV;AAKEH,IAAAA,OAAO,EAAC;AALV,GAPM,EAcN;AAEEE,IAAAA,QAAQ,EAAC,IAFX;AAGEH,IAAAA,UAAU,EAAC,IAHb;AAIEI,IAAAA,OAAO,EAAC,CAJV;AAKEH,IAAAA,OAAO,EAAC;AALV,GAdM,EAqBN;AAEEE,IAAAA,QAAQ,EAAC,IAFX;AAGEH,IAAAA,UAAU,EAAC,IAHb;AAIEI,IAAAA,OAAO,EAAC,CAJV;AAKEH,IAAAA,OAAO,EAAC;AALV,GArBM,EA4BN;AAEEE,IAAAA,QAAQ,EAAC,IAFX;AAGEH,IAAAA,UAAU,EAAC,IAHb;AAIEI,IAAAA,OAAO,EAAC,CAJV;AAKEH,IAAAA,OAAO,EAAC;AALV,GA5BM,EAmCN;AAEEE,IAAAA,QAAQ,EAAC,IAFX;AAGEH,IAAAA,UAAU,EAAC,IAHb;AAIEI,IAAAA,OAAO,EAAC,CAJV;AAKEH,IAAAA,OAAO,EAAC;AALV,GAnCM;AAZK,CAAb;AAyDA,IAAMI,GAAG,GAAG,IAAIC,mBAAJ,EAAZ;AAEAD,GAAG,CAACE,GAAJ,CAAQD,8BAAe,MAAf,CAAR;AAEAD,GAAG,CAACG,GAAJ,CAAQ,GAAR;AAAA,qEAAa,iBAAOC,IAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,YAAAA,KAFK,GAEG,kDAFH;AAGLC,YAAAA,MAHK,GAGI,0CAAe,gCAAC,QAAD;AAAK,cAAA,SAAS,EAAEd,IAAI,CAACC,SAArB;AAAgC,cAAA,OAAO,EAAED,IAAI,CAACI;AAA9C,cAAf,CAHJ;AAIXQ,YAAAA,GAAG,CAACG,IAAJ,CAASF,KAAK,CAACG,OAAN,CAAc,cAAd,EAA8BC,QAA9B,CAAT,EAJW,CAMX;AACA;AACA;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA;AAYAV,GAAG,CAACW,MAAJ,CAAW,IAAX;AACAC,OAAO,CAACC,GAAR,CAAY,oBAAZ",
      "sourceRoot": "C:\\Users\\14353\\DevMountain\\week11\\server-rendering-app\\server\\",
      "sourcesContent": [
        "import React from \"react\"\r\nimport express from \"express\"\r\n\r\nimport {readFileSync} from \"fs\"\r\nimport {renderToString} from \"react-dom/server\"\r\nimport {App} from \"../client/App\"\r\n\r\nconst data = {\r\n  questions:[{\r\n\r\n    questionId:\"Q1\",\r\n    content:\"Which back end solution should we use for our application?\"\r\n\r\n},{\r\n\r\n    questionId:\"Q2\",\r\n    content:\"What percentage of developer time should be devoted to end-to-end testing?\"\r\n\r\n}],\r\nanswers:[{\r\n\r\n    answerId:\"A1\",\r\n    questionId:1,\r\n    upvotes:2,\r\n    content: \"Apache\"\r\n\r\n},{\r\n\r\n    answerId:\"A2\",\r\n    questionId:\"Q1\",\r\n    upvotes:0,\r\n    content:\"Java\"\r\n\r\n},{\r\n\r\n    answerId:\"A3\",\r\n    questionId:\"Q1\",\r\n    upvotes:4,\r\n    content:\"Node.js\"\r\n\r\n},{\r\n\r\n    answerId:\"A4\",\r\n    questionId:\"Q2\",\r\n    upvotes:2,\r\n    content:\"25%\"\r\n\r\n},{\r\n\r\n    answerId:\"A5\",\r\n    questionId:\"Q2\",\r\n    upvotes:1,\r\n    content:\"50%\"\r\n\r\n},{\r\n\r\n    answerId:\"A6\",\r\n    questionId:\"Q2\",\r\n    upvotes:1,\r\n    content:\"75%\"\r\n\r\n}]\r\n}\r\n\r\nconst app = new express()\r\n\r\napp.use(express.static(\"dist\"))\r\n\r\napp.get(\"/\", async (_req, res) => {\r\n\r\n  const index = readFileSync(`public/index.html`, `utf8`)\r\n  const render = renderToString(<App questions={data.questions} answers={data.answers}/>)\r\n  res.send(index.replace(\"{{rendered}}\", rendered))\r\n\r\n  // // res.send(\r\n  // //   `<h1>REACT IS SUPER HAWT</h1>`\r\n  // )\r\n\r\n})\r\n\r\napp.listen(7777)\r\nconsole.log(\"Server is running!\")"
      ]
    },
    "sourceType": "script",
    "mtime": 1627575569412
  }
}